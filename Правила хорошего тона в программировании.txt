	Правила хорошего тона в командной работе в программировании

1. Все дочерние ветки делаются из ветки 'master' или 'main'

2. Ветка 'master' является неизменяемой веткой

3. Ветка 'master' принимает в себя только изменения из дочерних веток, то есть всю работу выполняют в дочерних ветках от 'master', а затем-
-сливают на ветку 'master'

4. Не нужно делать дочерние ветки от дочерних веток

5. В некоторых компаниях используют метод 3х-ступенчатой аутентификации, то есть всего в рабочем репозитории есть три ветки: 'master',-
-'stage' и 'def'. Нашей рабочей веткой является 'def', после того как мы завершили свою работу(написание кода) в ветке 'def',-
-её проверяет тимлид(главный по команде, ведущий проекта, куратор по проекту) и если всё хорошо, он сливает её с веткой 'stage', после чего-
-нашу работу проверяет заказчик и если всё хорошо, то далее сливают с веткой 'master', после чего отправляют работу в production

6. Хорошая привычка при работе в Гите, это следующая последовательность команд для проверки и уточнения перед коммитом: 1) git diff,-
-2) git status, 3) git add, 4) git status, [5) GIT COMMIT], 6) git log

7. На практике вместо (git revert 'commit', то есть вместо изменения комментария к коммиту) делают новый коммит с внесением изменений-
-и новым комментарием соответственно

8. В разработке функция(метод) выполняет только одно полезное действие(операцию). Для выполнения нескольких операций следует задействовать несколько "элементарных" функций, разбив операции на каждую функ. соответственно
